/*
 * Copyright (c) 2023, e-con Systems.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#include "dt-bindings/clock/tegra234-clock.h"


#define CAM0_PWDN	TEGRA234_MAIN_GPIO(H, 6)
#define CAM1_PWDN	TEGRA234_MAIN_GPIO(AC, 0)
#define CAM_PWM	TEGRA234_MAIN_GPIO(G, 6)
#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)
#define CAM_LANES 2
#define CAM_LANES_STRING "2"


/{
	gpio@2200000 {
		camera-control-0_output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <CAM0_PWDN 0>;
                        output-high;
                        label = "cam0-pwdn";
                };
		camera-control-1_output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <CAM1_PWDN 0>;
                        output-high;
                        label = "cam1-pwdn";
                };
		camera-control-4_output-high {
                        status = "okay";
                        gpio-hog;
                        gpios = <CAM_PWM 0>;
                        output-high;
                        label = "cam-pwm";
                };
	};

	tegra-capture-vi {
        	status = "okay";
        	num-channels = <4>;
        	ports {
		    #address-cells = <1>;
		    #size-cells = <0>;
		    status = "okay";
        	    port@0 {
			reg = <0>;
                	status = "okay";
                	vi_in0: endpoint {
			    vc-id = <1>;
                	    port-index = <0>;
                	    status = "okay";
                	    bus-width = <CAM_LANES>;
			    remote-endpoint = <&csi_out0>;
                	};
            	};
            	port@1 {
                	status = "okay";
			reg = <1>;
                	vi_in1: endpoint {
			    vc-id = <0>;
                	    port-index = <0>;
                	    status = "okay";
                	    bus-width = <CAM_LANES>;
			    remote-endpoint = <&csi_out1>;
                	};
            	};
	    port@2 {
		status = "okay";
		reg = <2>;
		vi_in2: endpoint {
			vc-id = <1>;
			port-index = <2>;
			bus-width = <CAM_LANES>;
			remote-endpoint = <&csi_out2>;
			status = "okay";
		};
	    };
	    port@3{
		status = "okay";
		reg = <3>;
		vi_in3: endpoint {
			vc-id = <0>;
			port-index = <2>;
			bus-width = <CAM_LANES>;
			remote-endpoint = <&csi_out3>;
			status = "okay";
		};
	    };
	   
        };
    };
host1x@13e00000 {
        nvcsi@15a00000 {
	    num-channels = <4>;
	    #address-cells = <1>;
	    #size-cells = <0>;
            status = "okay";
            channel@0 {
                status = "okay";
		reg = <0>;
                ports {
		    #address-cells = <1>;
		    #size-cells = <0>;
                    port@0 {
                        status = "okay";
			reg = <0>;
                        csi_in0: endpoint@0 {
                            status = "okay";
                            port-index = <0>;
			    bus-width = <CAM_LANES>;
                            remote-endpoint = <&cam_out0>;
                        };
                    };
                    port@1 {
                        status = "okay";
			reg = <1>;
                        csi_out0: endpoint@1 {
                            status = "okay";
			    remote-endpoint = <&vi_in0>;
                        };
                    };
                };
            };
            channel@1 {
                status = "okay";
		reg = <1>;
                ports {
		    #address-cells = <1>;
		    #size-cells = <0>;
                    
		    port@0 {
			reg = <0>;
                        status = "okay";
                        csi_in1: endpoint@2 {
                            status = "okay";
			    port-index = <0>;
                            bus-width = <CAM_LANES>;
                            remote-endpoint = <&cam_out1>;
                        };
                    };
                    port@1 {
                        status = "okay";
			reg = <1>;
                        csi_out1: endpoint@3 {
                            status = "okay";
			    remote-endpoint = <&vi_in1>;
                        };
                    };
                };
            };
	    channel@2 {
                status = "okay";
		reg = <2>;
                ports {
		    #address-cells = <1>;
		    #size-cells = <0>;
                    port@0 {
                        status = "okay";
			reg = <0>;
                        csi_in2: endpoint@4 {
                            status = "okay";
                            port-index = <2>;
			    bus-width = <CAM_LANES>;
                            remote-endpoint = <&cam_out2>;
                        };
                    };
                    port@1 {
                        status = "okay";
			reg = <1>;
                        csi_out2: endpoint@5 {
                            status = "okay";
			    remote-endpoint = <&vi_in2>;
                        };
                    };
                };
            };
            channel@3 {
                status = "okay";
		reg = <3>;
                ports {
		    #address-cells = <1>;
		    #size-cells = <0>;
                    
		    port@0 {
			reg = <0>;
                        status = "okay";
                        csi_in3: endpoint@6 {
                            status = "okay";
			    port-index = <2>;
                            bus-width = <CAM_LANES>;
                            remote-endpoint = <&cam_out3>;
                        };
                    };
                    port@1 {
                        status = "okay";
			reg = <1>;
                        csi_out3: endpoint@7 {
                            status = "okay";
			    remote-endpoint = <&vi_in3>;
                        };
                    };
                };
            };
        };
    };

    i2c@3180000 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
        tca9543@72 {
	    status = "okay";
	    compatible = "nxp,pca9543";
	    reg = <0x72>;
	    #address-cells = <1>;
	    #size-cells = <0>;
	    skip_mux_detect;
	    force_bus_start = <0x1e>;
            i2c@0 {
                status = "okay";
		reg = <0>;
		i2c-mux,deselect-on-exit;
		#address-cells = <1>;
		#size-cells = <0>;
		ar0234_a@43 {
			status = "okay";
			compatible = "nvidia,ar0234";
			reg = <0x43>;
			sensor_model = "ar0234";
			avdd-reg = "vana";
			iovdd-reg = "vif";
			clocks = <&bpmp_clks TEGRA234_CLK_EXTPERIPH1>,<&bpmp_clks TEGRA234_CLK_EXTPERIPH1>;
			clock-names = "extperiph1","pllp_grtba";
			mclk ="extperiph1";
			clock-frequency = <24000000>;
			default-trigger = "internal";
			devnode = "video0";
			deser-reset-gpio = <&tegra_main_gpio CAM0_PWDN GPIO_ACTIVE_HIGH>;	
			use_sensor_mode_id = "false";
			camera_mipi_lanes = <2>;
			camera-mipi-clk = <1200>;
			sio-port = "A";
			#pwm-cells = <2>;
			#pwms = <&tegra_pwm1 0 33898305>;

#define LOCAL_VC_ID "1"
#define TEGRA_SINTERFACE "serial_a"
#include "nilecam25_cuoagx_mode.dtsi"


			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				
				port@0 {
					reg = <0>;
					cam_out0: endpoint {
						status = "okay";
						vc-id = <1>;
						port-index = <0>;
						bus-width = <CAM_LANES>;
						remote-endpoint = <&csi_in0>;
					};
				};
			};	
		};     
		ar0234_b@44 {
			status = "okay";
			compatible = "nvidia,ar0234";
			reg = <0x44>;
			sensor_model = "ar0234";
			avdd-reg = "vana";
			iovdd-reg = "vif";
			clocks = <&bpmp_clks TEGRA234_CLK_EXTPERIPH1>,<&bpmp_clks TEGRA234_CLK_EXTPERIPH1>;
			clock-names = "extperiph1","pllp_grtba";
			mclk ="extperiph1";
			clock-frequency = <24000000>;
			devnode = "video1";
			deser-reset-gpio = <&tegra_main_gpio CAM0_PWDN GPIO_ACTIVE_HIGH>;
			use_sensor_mode_id = "false";
			camera_mipi_lanes = <2>;
			camera-mipi-clk = <1200>;
			sio-port = "B";
			#pwm-cells = <2>;
			#pwms = <&tegra_pwm1 0 33898305>;

#undef TEGRA_SINTERFACE
#define TEGRA_SINTERFACE "serial_b"
#undef LOCAL_VC_ID
#define LOCAL_VC_ID "0"
#include "nilecam25_cuoagx_mode.dtsi"

			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					cam_out1: endpoint {
						vc-id = <0>;
						port-index = <0>;
						bus-width = <CAM_LANES>;
						remote-endpoint = <&csi_in1>;
					};
				};
			};	
		};           
            };

	    i2c@1 {
		status = "okay";
		reg = <1>;
		i2c-mux,deselect-on-exit;
		#address-cells = <1>;
		#size-cells = <0>;
		ar0234_c@43 {
			status = "okay";
			compatible = "nvidia,ar0234";
			reg = <0x43>;
			sensor_model = "ar0234";
			avdd-reg = "vana";
			iovdd-reg = "vif";
			clocks = <&bpmp_clks TEGRA234_CLK_EXTPERIPH1>,<&bpmp_clks TEGRA234_CLK_EXTPERIPH1>;
			clock-names = "extperiph1","pllp_grtba";
			mclk = "extperiph1";
			clock-frequency = <24000000>;
			devnode = "video2";
			deser-reset-gpio = <&tegra_main_gpio CAM1_PWDN GPIO_ACTIVE_HIGH>;
			use_sensor_mode_id = "false";
			camera_mipi_lanes = <2>;
			camera-mipi-clk = <1200>;
			sio-port = "A";
			#pwm-cells = <2>;
			#pwms = <&tegra_pwm1 0 33898305>;

#undef LOCAL_VC_ID 
#define LOCAL_VC_ID "1"
#undef TEGRA_SINTERFACE
#define TEGRA_SINTERFACE "serial_c"
#include "nilecam25_cuoagx_mode.dtsi"

			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					cam_out2: endpoint {
						status = "okay";
						vc-id = <1>;
						port-index = <2>;
						bus-width = <CAM_LANES>;
						remote-endpoint = <&csi_in2>;
					};	
				};
			};
		};
		ar0234_d@44 {
			status = "okay";
			compatible = "nvidia,ar0234";
			reg = <0x44>;
			sensor_mode = "ar0234";
			avdd-reg = "vana";
			iovdd-reg = "vif";
			clocks = <&bpmp_clks TEGRA234_CLK_EXTPERIPH1>,<&bpmp_clks TEGRA234_CLK_EXTPERIPH1>;
			clock-names = "extperiph1","pllp_grtba";
			mclk ="extperiph1";
			clock-frequency = <24000000>;
			devnode = "video3";
			deser-reset-gpio = <&tegra_main_gpio CAM1_PWDN GPIO_ACTIVE_HIGH>;
			use_sensor_mode_id = "false";
			camera_mipi_lanes = <2>;
			camera-mipi-clk = <1200>;
			sio-port = "B";
			#pwm-cells = <2>;
			#pwms = <&tegra_pwm1 0 33898305>;

#undef LOCAL_VC_ID 
#define LOCAL_VC_ID "0"
#undef TEGRA_SINTERFACE
#define TEGRA_SINTERFACE "serial_d"
#include "nilecam25_cuoagx_mode.dtsi"
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					cam_out3: endpoint {
						status = "okay";
						vc-id = <0>;
						port-index = <2>;
						bus-width = <CAM_LANES>;
						remote-endpoint = <&csi_in3>;
						};
					};
				};
			};	 
		};
	};

    };  
};

/{

    tegra-camera-platform {
        num_csi_lanes = <4>;
        max_lane_speed = <2500000>;
        min_bits_per_pixel = <10>;
        vi_peak_byte_per_pixel = <2>;
        vi_bw_margin_pct = <25>;
	//max_pixel_rate = <750000>;
        isp_peak_byte_per_pixel = <5>;
        isp_bw_margin_pct = <25>;
	compatible = "nvidia, tegra-camera-platform";
	status = "okay";
        
	modules {
            module0 {
                status = "okay";
		badge = "ar0234_a";
		orientation = "1";
		position = "bottomleft"; 
                 drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
                    devname = "ar0234_a 30-0043";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@72/i2c@0/ar0234_a@43";
                };
            };
	    module1 {
                status = "okay";
		badge = "ar0234_b";
		orientation = "2";
		position = "rear2";
                drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
                    devname = "ar0234_b 30-0044";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@72/i2c@0/ar0234_b@44";
                };
            };
            
	    module2 {
		status = "okay";
		badge = "ar0234_c";
		orientation = "1";
		position = "rear3";
		drivernode0 {
			status = "okay";
			pcl_id = "v4l2_sensor";
			devname = "ar0234_c 31-0043";
			proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@72/i2c@1/ar0234_c@43";
		};
	    };
	    module3 {
		status = "okay";
		badge = "ar0234_d";
		orientation = "1";
		position = "rear4";
		drivernode0 {
			status = "okay";
			pcl_id = "v4l2_sensor";
			devname = "ar0234_d 31-0044";
			proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@72/i2c@1/ar0234_d@44";
		};
	    };
	    /*
            module4 {
                status = "okay";
		badge = "ar0234_e";
                drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
                    devname = "ar0234_e 32-0043";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@73/i2c@0/ar0234_e@42";
                };
            };
            module5 {
                status = "okay";
		badge = "ar0234_f";
                drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
                    devname = "ar0234_f 32-0044";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@73/i2c@0/ar0234_f@42";
                };
            };
		module6 {
                status = "okay";
		badge = "ar0234_g";
                drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
                    devname = "ar0234_g 33-0043";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@73/i2c@1/ar0234_g@42";
                };
		module7 {
                status = "okay";
		badge = "ar0234_h";
                drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
                    devname = "ar0234_h 33-0044";
                    proc-device-tree = "/proc/device-tree/i2c@3180000/tca9543@73/i2c@1/ar0234_h@42";
                };
            };
            
            };*/
        };
    };
};
